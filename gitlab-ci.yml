stages:
  - login
  - build
  - deploy

variables:
  AZURE_CREDENTIALS: "${AZURE_CREDENTIALS}"
  AZURE_WEBAPP_NAME: "${AZURE_WEBAPP_NAME}"
  AZURE_RESOURCE_GROUP: "${AZURE_RESOURCE_GROUP}"

# Step 1: Login to Azure
azure_login:
  stage: login
  image: mcr.microsoft.com/azure-cli
  script:
    - echo "$AZURE_CREDENTIALS" > azure_credentials.json
    - az login --service-principal --username $(jq -r '.clientId' azure_credentials.json) \
      --password $(jq -r '.clientSecret' azure_credentials.json) \
      --tenant $(jq -r '.tenantId' azure_credentials.json)

# Step 2: Build the Flask App
build_flask_app:
  stage: build
  image: python:3.9
  script:
    - pip install -r requirements.txt
    - gunicorn --version  # Verify gunicorn is installed
  artifacts:
    paths:
      - .

# Step 3: Deploy the App
deploy_to_azure:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  dependencies:
    - build_flask_app
  script:
    # Zip the application
    - zip -r flask_app.zip .
    
    # Deploy to Azure Web App
    - az webapp deployment source config-zip --resource-group "$AZURE_RESOURCE_GROUP" \
      --name "$AZURE_WEBAPP_NAME" --src flask_app.zip
    
    # Set the startup command
    - az webapp config set --resource-group "$AZURE_RESOURCE_GROUP" \
      --name "$AZURE_WEBAPP_NAME" --startup-file "gunicorn --bind=0.0.0.0:8000 app:app"
